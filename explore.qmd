---
format:
  html:
    toc: true
    toc-depth: 4
    page-layout: full
---

# Work with the data

## Questions

-   Under Accounts, what does Households tell us â€“ how do we link individuals to households?

![](images/paste-1.png)

## Setup

```{r}
#| label: setup

source(here::here("libraries.R"))

hhdr <- here::here("data-raw")
neon <- fs::path(hhdr, "neon")
judy <- fs::path(hhdr, "judy")
rds <- fs::path(hhdr, "rds")

```

## Get and save data


### Households data

-   Households: HH account id 34516 is a duplicate (2 records) with 2 different phone numbers (518) 744-6736 (O) and (518) 677-7893 (O) but otherwise the same

```{r}
#| label: households

hhfname <- "households_2025-07-16.csv"

hh1 <- vroom(
  fs::path(neon, hhfname),
  col_types = cols(.default = col_character())
)
skim(hh1)
glimpse(hh1)

hh2 <- hh1 |>
  rename_with(.fn = tolower) |>
  select(
    hhname = 1,
    hhcontact = 2,
    hhaccountid = 3,
    hhemail = email,
    hhphone = 5,
    hhwebsite = website,
    address,
    city,
    state,
    zip = `zip code`,
    country,
    hhsalutation = `household salutation`,
    hhncontacts = `household contacts`,
    totrevenue = `total revenue`,
    ntransactions = `number of transactions`,
    updated = `last updated`,
    createdon = `created on`
  )
cbind(names(hh1), names(hh2))
glimpse(hh2)

hh3 <- hh2 |>
  filter(!(hhaccountid == "34516" & hhphone == "(518) 744-6736 (O)")) |> # drop one of the duplicate households
  mutate(
    hhphone2 = ifelse(
      hhaccountid == "34516",
      "(518) 744-6736 (O)",
      NA_character_
    ),
    hhncontacts = as.integer(hhncontacts),
    totrevenue = as.numeric(totrevenue),
    ntransactions = as.integer(ntransactions),
    updated = lubridate::mdy_hms(updated) |> as.Date(),
    createdon = lubridate::mdy_hms(createdon) |> as.Date()
  )

skimr::skim(hh3)
glimpse(hh3)

saveRDS(hh3, fs::path(rds, "households.rds"))

```


### Link household members based on address

Duplicates:

-   Households: HH account id 34516 is a duplicate (2 records) with 2 different phone numbers (518) 744-6736 (O) and (518) 677-7893 (O) but otherwise the same
-   Accounts: no duplicates

```{r}
accounts <- readRDS(fs::path(rds, "accounts.rds"))
households <- readRDS(fs::path(rds, "households.rds"))

anyDuplicated(accounts$accountid) # 0
anyDuplicated(households$hhaccountid) # was rec #1215, account "34516" Jessica Roosevelt

remove_any <- function(s, vec) {
  # Create regex pattern that matches any element in vec
  pattern <- str_c(vec, collapse = "|")
  # Remove all matches from each string using map_chr
  map_chr(s, \(x) str_remove_all(x, pattern))
}

drops <- c(
  "av",
  "av.",
  "ave",
  "ave.",
  "avenue",
  "ln",
  "ln.",
  "lane",
  "rd",
  "rd.",
  "road",
  "st",
  "st.",
  "street",
  "'",
  "-"
)

hhmatchable <- households |>
  filter(!is.na(address)) |>
  select(hhname, hhaccountid, address, city, state) |>
  mutate(across(c(address, city, state), str_to_lower)) |>
  mutate(
    address = remove_any(address, drops),
    address = str_remove_all(address, " "),
    address = str_remove(address, "\\."),
    match = paste(address, city, state, sep = "-")
  )
hhmatchable

acctmatchable <- accounts |>
  filter(type == "Individual", !is.na(address)) |>
  select(acctname, accountid, address, city, state) |>
  mutate(across(c(address, city, state), str_to_lower)) |>
  mutate(
    address = remove_any(address, drops),
    address = str_remove_all(address, " "),
    address = str_remove(address, "\\."),
    match = paste(address, city, state, sep = "-")
  )
acctmatchable

address_matches <- left_join(
  hhmatchable |> select(hhname, hhaccountid, match),
  acctmatchable |> select(acctname, accountid, match),
  relationship = "many-to-many",
  by = join_by(match)
) |>
  mutate(primary = hhaccountid == accountid) |>
  arrange(hhaccountid, desc(primary), accountid) |>
  mutate(
    nrecs = n(),
    primary == hhaccountid == accountid,
    recnum = row_number(),
    .by = hhaccountid
  )

count(address_matches, nrecs)

address_matches |>
  filter(nrecs == 1, hhaccountid != accountid) # good - no one!

saveRDS(address_matches, fs::path(rds, "hhindiv_matches.rds"))

```

## Analysis

```{r}

accounts <- readRDS(fs::path(rds, "accounts.rds"))
hholds <- readRDS(fs::path(rds, "households.rds"))
donations <- readRDS(fs::path(rds, "donations.rds"))

```

## Explore

```{r}

fname <- "accounts_2025-07-16.csv"

df1 <- vroom(
  fs::path(hhdr, fname),
  col_types = cols(.default = col_character())
)

accounts <- df1 |>
  rename_with(.fn = tolower) |>
  rename(
    subtype = 4,
    pcontact = `primary contact`,
    zip = `zip code`,
    created = `created on`,
    ocategory = `origin category`,
    odetail = `origin detail`
  ) |>
  select(-...20)
skimr::skim(accounts)

count(accounts, type)

count(accounts, type, subtype) |>
  arrange(type, desc(n))

# not much value in these groups
count(accounts, state, sort = TRUE) |> mutate(pct = n / sum(n))
count(accounts, source, sort = TRUE) |> mutate(pct = n / sum(n))
count(accounts, ocategory, sort = TRUE) |> mutate(pct = n / sum(n))
count(accounts, odetail, sort = TRUE) |> mutate(pct = n / sum(n))

```


```{r}
donors4 <- donors3 |>
  summarise(amount = sum(amount), .by = c(accountid, name)) |>
  arrange(desc(amount)) |>
  left_join(
    accounts |> select(accountid = id, accountname = account, type),
    by = join_by(accountid)
  )

donors4


keep <- "Roome"
keep <- "Estey"

donors3 |>
  filter(str_detect(name, keep)) |>
  select(name, accountid, type, date, campaign, notes, amount) |>
  # arrange(desc(amount)) |>
  arrange(date) |>
  mutate(rollsum = cumsum(amount))

# donors2 |>
#   filter(str_detect(name, keep)) |>
#   mutate()
# select(name, accountid, type, date, campaign, notes, amount) |>
#   arrange(desc(amount)) |>
#   mutate(rollsum = cumsum(amount))

```